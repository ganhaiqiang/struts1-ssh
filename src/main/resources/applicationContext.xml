<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
        http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context-2.5.xsd">

	<context:annotation-config />

	<context:property-placeholder location="classpath:jdbc.properties" />

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driver}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="5" />
		<property name="minIdle" value="5" />
		<property name="maxActive" value="500" />
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<!-- 注入dataSource连接资源 -->
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.connection.autocommit">true</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
			</props>
		</property>
		<property name="mappingLocations">
			<list>
				<value>classpath*:org/ssh/demo/**/pojo/*.hbm.xml</value>
			</list>
		</property>
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 配置通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="add*" propagation="REQUIRED" read-only="false" rollback-for="Exception" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false" rollback-for="Exception" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="Exception" />
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" rollback-for="Exception" />
			<tx:method name="*" propagation="REQUIRES_NEW" read-only="false" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>

	<!-- 将事务作用到service包下所有类的所有方法 -->
	<aop:config>
		<aop:pointcut id="pointcut" expression="execution(* org.ssh.demo.service.impl.*.*(..))" />
		<aop:advisor pointcut-ref="pointcut" advice-ref="txAdvice" />
	</aop:config>

	<!-- 注解方式管理事务,需要在类上使用注解@Transactional -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<context:component-scan base-package="org.ssh.demo.**.dao.impl" />
	<context:component-scan base-package="org.ssh.demo.**.service.impl" />
</beans>